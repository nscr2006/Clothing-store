{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyADpK4oiNQVxRBQW3BKoV633veamxn9bqY\",\n  authDomain: \"crown-db-a6812.firebaseapp.com\",\n  databaseURL: \"https://crown-db-a6812.firebaseio.com\",\n  projectId: \"crown-db-a6812\",\n  storageBucket: \"crown-db-a6812.appspot.com\",\n  messagingSenderId: \"5604835960\",\n  appId: \"1:5604835960:web:ac40ff1057684a1460e38d\",\n  measurementId: \"G-L3L97LRDXE\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/sharathchandrareddy/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,gCAFF;AAGVC,EAAAA,WAAW,EAAE,uCAHH;AAIVC,EAAAA,SAAS,EAAE,gBAJD;AAKVC,EAAAA,aAAa,EAAE,4BALL;AAMVC,EAAAA,iBAAiB,EAAE,YANT;AAOVC,EAAAA,KAAK,EAAE,yCAPG;AAQVC,EAAAA,aAAa,EAAE;AARL,CAAd;AAWE,OAAO,MAAMC,yBAAyB,GAAE,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACrE,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAtB;;AACC,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAcC,MAAAA;AAAd,QAAqBV,QAA3B;AACA,UAAMW,SAAS,GAAC,IAAIC,IAAJ,EAAhB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAMa,KAAN,EAAY;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACH;AACJ;;AACD,SAAOf,OAAP;AAEJ,CArBM;AAsBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAQ,MAAM6B,IAAI,GAAC9B,QAAQ,CAAC8B,IAAT,EAAX;AACR,OAAQ,MAAOhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAjB;AACR,MAAMiB,QAAQ,GAAC,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAC,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA3B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config= {\n    apiKey: \"AIzaSyADpK4oiNQVxRBQW3BKoV633veamxn9bqY\",\n    authDomain: \"crown-db-a6812.firebaseapp.com\",\n    databaseURL: \"https://crown-db-a6812.firebaseio.com\",\n    projectId: \"crown-db-a6812\",\n    storageBucket: \"crown-db-a6812.appspot.com\",\n    messagingSenderId: \"5604835960\",\n    appId: \"1:5604835960:web:ac40ff1057684a1460e38d\",\n    measurementId: \"G-L3L97LRDXE\"\n  }\n\n  export const createUserProfileDocument= async (userAuth,additionalData)=>{\n      if(!userAuth) return;\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n      const snapShot= await userRef.get();\n       if(!snapShot.exists){\n           const { displayName,email}=userAuth;\n           const createdAt=new Date();\n\n           try{\n               await userRef.set({\n                   displayName,\n                   email,\n                   createdAt,\n                   ...additionalData\n               })\n           }catch(error){\n               console.log('error creating user',error.message);\n           }\n       }\n       return userRef;\n\n  }\n  firebase.initializeApp(config);\n\n  export  const auth=firebase.auth();\n  export  const  firestore=firebase.firestore();\n  const provider=new firebase.auth.GoogleAuthProvider();\n  provider.setCustomParameters({prompt:'select_account'});\n\n  export const signInWithGoogle=()=>auth.signInWithPopup(provider);\n\n  export default firebase;\n"]},"metadata":{},"sourceType":"module"}